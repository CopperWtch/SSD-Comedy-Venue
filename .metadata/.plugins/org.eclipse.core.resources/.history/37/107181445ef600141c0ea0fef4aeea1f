package model;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;

public class DBComedian implements IComedians{


	private static DBComedian instance = null;
	
	public static DBComedian getInstance()
	{
		if(instance==null)
			instance = new DBComedian();
		return instance;
	}
	
	private Connection connection = null;
	
	public DBComedian()
	{
		try
		{
			Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
			connection = DriverManager.getConnection("jdbc:derby:ComedyVenueDB");
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
	}
	
	@Override
	public ArrayList<Comedian> getAllComedians() {
		ArrayList<Comedian> comedians = new ArrayList<Comedian>();
		if(connection!=null)
		{
			try
			{
				String sql = "SELECT * FROM Comedian ORDER BY id";
				Statement statement = connection.createStatement();
				ResultSet result = statement.executeQuery(sql);
				while(result.next())
				{
					int id = result.getInt("id");
					String name = result.getString("name");
					String desc = result.getString("desc");
					
					Comedian comedian = new Comedian(id, name, desc);
					comedians.add(comedian);
					
				}
				
				statement.close();
				
			}
			catch(Exception e)
			{
				e.printStackTrace();
			}
		}
		return comedians;
	}

	@Override
	public void addComedian(Comedian c) {
		if(connection!=null)
		{
			try
			{
				String sql = "INSERT INTO Comedian(name, desc) VALUES ('" + c.getName()+"', '" + c.getDesc()+"')";
				Statement statement = connection.createStatement();
				statement.executeQuery(sql);
				statement.close();
			}
			catch(Exception e)
			{
				e.printStackTrace();
			}
		}
		
	}

	@Override
	public void removeComedian(Comedian c) {
		if(connection!=null)
		{
			try
			{
				String sql = "DELETE FROM Comedian " +
							"WHERE id = "+ c.getId();
				Statement statement = connection.createStatement();
				statement.executeQuery(sql);
				statement.close();
			}
			catch(Exception e)
			{
				e.printStackTrace();
			}
		}
		
	}

	@Override
	public ArrayList<Comedian> getComedianForEvent(int EventId) {
		ArrayList<Comedian> comedians = new ArrayList<Comedian>();
		if(connection!=null)
		{
			try
			{
				String sql = "SELECT * FROM ComedianBooking WHERE eventId=" + EventId;
				Statement statement = connection.createStatement();
				ResultSet result = statement.executeQuery(sql);
				while(result.next())
				{
					int id = result.getInt("comedianId");
					
					 sql = "SELECT * FROM Comedian WHERE id=" + id;
					 statement = connection.createStatement();
					 result = statement.executeQuery(sql);
					 
						while(result.next())
						{
							int id = result.getInt("comedianId");
							
							 sql = "SELECT * FROM Comedian WHERE id=" + id;
							 statement = connection.createStatement();
							 result = statement.executeQuery(sql);
							 
							Comedian comedian = new Comedian(id, name, desc);
							comedians.add(comedian);
							
						}
					
				}
				
				statement.close();
				
			}
			catch(Exception e)
			{
				e.printStackTrace();
			}
		}
		return comedians;
	}

}
